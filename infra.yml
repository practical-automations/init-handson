- hosts: localhost
  gather_facts: false
  collections:
    - awx.awx

  tasks:
  - name: (gitlab) set personal token
    shell: |
      gitlab_host="http://gitlab"
      gitlab_user="root"
      gitlab_password="password"
      body_header=$(curl -c /tmp/cookies.txt -i "${gitlab_host}/users/sign_in" -s)
      csrf_token=$(echo $body_header | perl -ne 'print "$1\n" if /new_user.*?authenticity_token"[[:blank:]]value="(.+?)"/' | sed -n 1p)
      curl -b /tmp/cookies.txt -c /tmp/cookies.txt -i "${gitlab_host}/users/sign_in" \
           --data "user[login]=${gitlab_user}&user[password]=${gitlab_password}" \
           --data-urlencode "authenticity_token=${csrf_token}"
      body_header=$(curl -H 'user-agent: curl' -b /tmp/cookies.txt -i "${gitlab_host}/profile/personal_access_tokens" -s)
      csrf_token=$(echo $body_header | perl -ne 'print "$1\n" if /authenticity_token"[[:blank:]]value="(.+?)"/' | sed -n 1p)
      body_header=$(curl -L -b /tmp/cookies.txt "${gitlab_host}/profile/personal_access_tokens" \
                         --data-urlencode "authenticity_token=${csrf_token}" \
                         --data 'personal_access_token[name]=golab-generated&personal_access_token[expires_at]=&personal_access_token[scopes][]=api')
      personal_access_token=$(echo $body_header | perl -ne 'print "$1\n" if /created-personal-access-token"[[:blank:]]value="(.+?)"/' | sed -n 1p)
      crudini --set ~/.python-gitlab.cfg main private_token ${personal_access_token}
    args:
      creates: /tmp/cookies.txt

  - name: (gitlab-ruuner) already configured runners?
    command: docker exec gitlab-runner gitlab-runner list
    register: configured_runners
    changed_when: False

  - name: (gitlab-runner) register runner
    shell: |
      RUNNER_TOKEN=token-AABBCCDD
      docker exec gitlab-runner \
             gitlab-runner register \
             --non-interactive \
             --url http://gitlab \
             --registration-token ${RUNNER_TOKEN} \
             --description pai-gitlab-runner-molecule \
             --tag-list molecule \
             --executor docker \
             --locked=false \
             --docker-image irixjp/pai-molecule:latest \
             --clone-url http://gitlab/ \
             --docker-volumes /var/run/docker.sock:/var/run/docker.sock \
             --docker-privileged=true \
             --docker-network-mode bootstrap_infraci_nw
    when:
      - configured_runners.stderr.find('\npai-gitlab-runner-molecule') == -1

  - name: (jupyter) create ssh dirs
    file:
      path: /jupyter/.ssh
      state: directory
      mode: '0700'
      owner: jupyter
      group: jupyter

  - name: (jupyter) put ssh key files
    copy:
      src: "{{ item.src }}"
      dest: "{{ item.dest }}"
      mode: "{{ item.mode }}"
      owner: jupyter
      group: jupyter
    loop:
      - src: id_rsa_test.pub
        dest: /jupyter/.ssh/id_rsa_test.pub
        mode: '0644'
      - src: id_rsa_prod.pub
        dest: /jupyter/.ssh/id_rsa_prod.pub
        mode: '0644'
      - src: id_rsa_test
        dest: /jupyter/.ssh/id_rsa_test
        mode: '0700'
      - src: id_rsa_prod
        dest: /jupyter/.ssh/id_rsa_prod
        mode: '0700'

#  - name: Create organizations
#    tower_organization:
#      name: "{{ item.name }}"
#      description: "{{ item.desc }}"
#      state: present
#    loop: "{{ infra_tower_groups }}"
